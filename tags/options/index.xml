<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>â€“ options</title><link>/feroxbuster-docs/tags/options/</link><description>Recent content in options on</description><generator>Hugo -- gohugo.io</generator><atom:link href="/feroxbuster-docs/tags/options/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Command Line Interface</title><link>/feroxbuster-docs/docs/configuration/command-line/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/feroxbuster-docs/docs/configuration/command-line/</guid><description>
&lt;h3 id="command-line-parsing">Command Line Parsing&lt;/h3>
&lt;p>Finally, after parsing the available config file, any options/arguments given on the commandline will override any
values that were set as a built-in or config-file value.&lt;/p>
&lt;pre tabindex="0">&lt;code>USAGE:
feroxbuster [OPTIONS]
OPTIONS:
-h, --help Print help information
-V, --version Print version information
Target selection:
--resume-from &amp;lt;STATE_FILE&amp;gt; State file from which to resume a partially complete scan (ex. --resume-from ferox-1606586780.state)
--stdin Read url(s) from STDIN
-u, --url &amp;lt;URL&amp;gt; The target URL (required, unless [--stdin || --resume-from] used)
Proxy settings:
-p, --proxy &amp;lt;PROXY&amp;gt; Proxy to use for requests (ex: http(s)://host:port, socks5(h)://host:port)
-P, --replay-proxy &amp;lt;REPLAY_PROXY&amp;gt; Send only unfiltered requests through a Replay Proxy, instead of all requests
-R, --replay-codes &amp;lt;REPLAY_CODE&amp;gt;... Status Codes to send through a Replay Proxy when found (default: --status-codes value)
Request settings:
-a, --user-agent &amp;lt;USER_AGENT&amp;gt; Sets the User-Agent (default: feroxbuster/2.5.0)
-A, --random-agent Use a random User-Agent
-b, --cookies &amp;lt;COOKIE&amp;gt;... Specify HTTP cookies to be used in each request (ex: -b stuff=things)
--data &amp;lt;DATA&amp;gt; Request's Body; can read data from a file if input starts with an @ (ex: @post.bin)
-f, --add-slash Append / to each request's URL
-H, --headers &amp;lt;HEADER&amp;gt;... Specify HTTP headers to be used in each request (ex: -H Header:val -H 'stuff: things')
-m, --methods &amp;lt;HTTP_METHODS&amp;gt;... Which HTTP request method(s) should be sent (default: GET)
-Q, --query &amp;lt;QUERY&amp;gt;... Request's URL query parameters (ex: -Q token=stuff -Q secret=key)
-x, --extensions &amp;lt;FILE_EXTENSION&amp;gt;... File extension(s) to search for (ex: -x php -x pdf js)
Request filters:
--dont-scan &amp;lt;URL&amp;gt;... URL(s) or Regex Pattern(s) to exclude from recursion/scans
Response filters:
-C, --filter-status &amp;lt;STATUS_CODE&amp;gt;... Filter out status codes (deny list) (ex: -C 200 -C 401)
--filter-similar-to &amp;lt;UNWANTED_PAGE&amp;gt;... Filter out pages that are similar to the given page (ex. --filter-similar-to http://site.xyz/soft404)
-N, --filter-lines &amp;lt;LINES&amp;gt;... Filter out messages of a particular line count (ex: -N 20 -N 31,30)
-s, --status-codes &amp;lt;STATUS_CODE&amp;gt;... Status Codes to include (allow list) (default: 200 204 301 302 307 308 401 403 405)
-S, --filter-size &amp;lt;SIZE&amp;gt;... Filter out messages of a particular size (ex: -S 5120 -S 4927,1970)
-W, --filter-words &amp;lt;WORDS&amp;gt;... Filter out messages of a particular word count (ex: -W 312 -W 91,82)
-X, --filter-regex &amp;lt;REGEX&amp;gt;... Filter out messages via regular expression matching on the response's body (ex: -X '^ignore me$')
Client settings:
-k, --insecure Disables TLS certificate validation in the client
-r, --redirects Allow client to follow redirects
-T, --timeout &amp;lt;SECONDS&amp;gt; Number of seconds before a client's request times out (default: 7)
Scan settings:
--auto-bail Automatically stop scanning when an excessive amount of errors are encountered
--auto-tune Automatically lower scan rate when an excessive amount of errors are encountered
-d, --depth &amp;lt;RECURSION_DEPTH&amp;gt; Maximum recursion depth, a depth of 0 is infinite recursion (default: 4)
-D, --dont-filter Don't auto-filter wildcard responses
-e, --extract-links Extract links from response body (html, javascript, etc...); make new requests based on findings
-L, --scan-limit &amp;lt;SCAN_LIMIT&amp;gt; Limit total number of concurrent scans (default: 0, i.e. no limit)
-n, --no-recursion Do not scan recursively
--parallel &amp;lt;PARALLEL_SCANS&amp;gt; Run parallel feroxbuster instances (one child process per url passed via stdin)
--rate-limit &amp;lt;RATE_LIMIT&amp;gt; Limit number of requests per second (per directory) (default: 0, i.e. no limit)
-t, --threads &amp;lt;THREADS&amp;gt; Number of concurrent threads (default: 50)
--time-limit &amp;lt;TIME_SPEC&amp;gt; Limit total run time of all scans (ex: --time-limit 10m)
-w, --wordlist &amp;lt;FILE&amp;gt; Path to the wordlist
Output settings:
--debug-log &amp;lt;FILE&amp;gt; Output file to write log entries (use w/ --json for JSON entries)
--json Emit JSON logs to --output and --debug-log instead of normal text
-o, --output &amp;lt;FILE&amp;gt; Output file to write results to (use w/ --json for JSON entries)
-q, --quiet Hide progress bars and banner (good for tmux windows w/ notifications)
--silent Only print URLs + turn off logging (good for piping a list of urls to other commands)
-v, --verbosity Increase verbosity level (use -vv or more for greater effect. [CAUTION] 4 -v's is probably too much)
&lt;/code>&lt;/pre></description></item></channel></rss>